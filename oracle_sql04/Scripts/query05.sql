/*
 * EMPLOYEES의 HIRE_DATE 열의 값을 +10 년 하여 수정한다.
 */
SELECT HIRE_DATE
     , HIRE_DATE + INTERVAL '10' YEAR AS "HIRE_DATE+10"
  FROM EMPLOYEES E ;

SELECT * FROM EMPLOYEES E; 

UPDATE EMPLOYEES
   SET HIRE_DATE = HIRE_DATE + INTERVAL '10' YEAR;
/*
 * LOCATIONS 테이블에 학원 주소 정보를 추가하세요.
 */
SELECT * FROM LOCATIONS L;
SELECT * FROM COUNTRIES C;
INSERT INTO COUNTRIES VALUES('KR', 'Korea', 3);
SELECT * FROM DEPARTMENTS D ;
SELECT * FROM REGIONS;
SELECT * FROM USER_CONSTRAINTS WHERE CONSTRAINT_NAME = 'COUNTRY_C_ID_PK';
INSERT INTO DEPARTMENTS VALUES(270, 'KH', NULL, 3300);
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'LOCATIONS';
INSERT INTO LOCATIONS
       VALUES (3300, '테헤란로', 12345, '강남', '서울', 'KR');
/*
 * DEPARTMENTS의 IT 부서에 대한 LOCATION_ID 를 학원 주소로 수정하세요.
 */
SELECT * FROM DEPARTMENTS D;
UPDATE DEPARTMENTS SET LOCATION_ID = 3300 WHERE DEPARTMENT_NAME = 'IT';
/*
 * EMPLOYEES 에서 COMMISSION_PCT 가 NULL 인 경우 0으로 수정하세요.
 */
SELECT * FROM EMPLOYEES E;
SELECT NVL(COMMISSION_PCT, 0)
  FROM EMPLOYEES E;
/*
 * EMPLOYEES 에서 MANAGER_ID 가 NULL 인 사원은 DEPARTMENTS 테이블의 MANAGER_ID 로
 * 수정하세요. 
 */
SELECT * FROM EMPLOYEES E ;

SELECT * FROM DEPARTMENTS D ;

UPDATE EMPLOYEES E
   SET E.MANAGER_ID = (SELECT MANAGER_ID FROM DEPARTMENTS D WHERE D.DEPARTMENT_ID = E.DEPARTMENT_ID)
 WHERE E.MANAGER_ID IS NULL;
/*
 * EMPLOYEES 에서 DEPARTMENT_ID 가 NULL 인 사원은 MANAGER_ID 의 값을 활용하여 해당 MANAGER_ID 와
 * 동일한 DEPARTMENT_ID 값을 가지도록 수정하세요.
 * (MANAGER_ID 는 EMPLOYEE_ID 와 외래키 관계입니다.)
 */
SELECT * FROM EMPLOYEES E;

UPDATE EMPLOYEES E
   SET E.DEPARTMENT_ID = (SELECT MANAGER_ID FROM EMPLOYEES E2 WHERE DEPARTMENT_ID IS NULL)
 WHERE E.DEPARTMENT_ID IS NULL;
/*
 * DEPARTMENTS 에서 MANAGER_ID 가 NULL 인 데이터는 삭제하세요.
 */
DELETE FROM DEPARTMENTS
 WHERE MANAGER_ID IS NULL;
/*
 * JOBS 테이블과 동일한 구조의 KJOBS 테이블을 만들고 JOB_TITLE 열의 값을
 * 한글로 번역하여 수정한다.
 * 단, MIN_SALARY, MAX_SALARY 컬럼은 만들 필요 없음.
 */

CREATE TABLE KJOBS AS SELECT*FROM JOBS WHERE 1=2;
INSERT INTO KJOBS SELECT * FROM JOBS;
DROP TABLE KJOBS;

SELECT * FROM KJOBS;
ALTER TABLE KJOBS RENAME COLUMN "직무이름" TO JOB_TITLE;

UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 1;

UPDATE KJOBS SET JOB_TITLE = '나' WHERE ROWNUM = 1;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 3;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 4;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 5;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 6;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 7;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 8;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 9;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 10;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 11;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 12;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 13;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 14;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 15;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 16;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 17;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 18;
UPDATE KJOBS SET JOB_TITLE = '가' WHERE ROWNUM = 19;


/*
 * DEPARTMENTS 테이블에 DEPARMENT_NAME_KR 컬럼을 추가 후 DEPARTMENT_NAME 을
 * 한글로 변역한 데이터가 수정되게 한다.
 */
SELECT * FROM DEPARTMENTS;
ALTER TABLE DEPARTMENTS ADD DEPARTMENT_NAME_KR VARCHAR2(30);
UPDATE DEPARTMENTS SET DEPARTMENT_NAME_KR = '가' WHERE ROWNUM = 1;
UPDATE DEPARTMENTS SET DEPARTMENT_NAME_KR = '나' WHERE DEPARTMENT_ID = 20;
UPDATE DEPARTMENTS SET DEPARTMENT_NAME_KR = '다' WHERE DEPARTMENT_ID = 30;
UPDATE DEPARTMENTS SET DEPARTMENT_NAME_KR = '라' WHERE DEPARTMENT_ID = 40;
UPDATE DEPARTMENTS SET DEPARTMENT_NAME_KR = '마' WHERE DEPARTMENT_ID = 50;
UPDATE DEPARTMENTS SET DEPARTMENT_NAME_KR = '바' WHERE DEPARTMENT_ID = 60;
UPDATE DEPARTMENTS SET DEPARTMENT_NAME_KR = '사' WHERE DEPARTMENT_ID = 70;
UPDATE DEPARTMENTS SET DEPARTMENT_NAME_KR = '아' WHERE DEPARTMENT_ID = 80;
UPDATE DEPARTMENTS SET DEPARTMENT_NAME_KR = '자' WHERE DEPARTMENT_ID = 90;
UPDATE DEPARTMENTS SET DEPARTMENT_NAME_KR = '차' WHERE DEPARTMENT_ID = 100;
UPDATE DEPARTMENTS SET DEPARTMENT_NAME_KR = '카' WHERE DEPARTMENT_ID = 110;

/*
 * KJOBS 테이블에 한글로 번역한 직무 타이틀을 JOBS 테이블에 JOB_TITLE_KR 컬럼을
 * 추가후 수정이 되도록 한다.(DEPARTMENTS 테이블 처럼 하나의 테이블에 영문/한글이
 * 모두 들어가게 한다.) 모든 작업을 완료 후 KJOBS 테이블은 제거 한다.
 */
SELECT * FROM KJOBS;
SELECT * FROM JOBS;
SELECT * FROM DEPARTMENTS;
ALTER TABLE JOBS ADD JOB_TITLE_KR VARCHAR2(30);

/*
 * JOBS 테이블에 다음의 데이터를 추가 한다.(JOB_TITLE_KR 도 추가되어 있어야 함)
 *     JOB_ID    JOB_TITLE           MIN_SALARY    MAX_SALARY
 *     IT_ITRN   Intern Programmer   3200          3800
 *     SV_MGR    Server Manager      4000          10000
 *     SV_ENG    Server Engineer     6000          12000
 *     NT_MGR    Network Manager     5000          11000
 *     NT_ENG    Network Engineer    7000          13000
 */
/*
 * 새로 신설된 Server, Network 부서를 위한 인력을 충원하고 있는 것으로 가정하여 각 부서마다
 * 3명의 인원을 EMPLOYEES 에 추가한다.(Manager 직무 1명, Engineer 직무 2명)
 *     - 초기에 모든 인원은 JOBS 테이블의 MIN_SALARY 의 급여를 받는 것으로 한다.
 *     - Server, Network 부서에 인원을 추가 할 때 반드시 1명의 부서장이 필요하기 때문에 인원 중 1명을
 *       부서장으로 만든다.(DEPARTMENTS 테이블의 MANAGER_ID 를 설정한다.)
 *     - 부서장으로 선택된 인원은 JOBS 테이블의 MIN_SALARY 급여에서 +2000 상승된 급여로 받을 수 있게
 *       데이터를 수정한다.
 */

/*
 * 모든 급여 정보를 수정하려고 한다.
 * JOBS 테이블과 EMPLOYEES 테이블의 모든 급여 정보를 기존보다 5% ~ 10% 상승 시키도록 한다.
 *     - 급여가 4000 미만인 경우 10% 상승
 *     - 급여가 4000 이상 8000 미만인 경우 8% 상승
 *     - 급여가 8000 이상 12000 미만인 경우 6% 상승
 *     - 급여가 12000 이상인 경우 5% 상승
 *     - 정수 1번째 자리에서 절삭할 것. 예) 4333.333 은 4330 으로 절삭.
 */

SELECT * FROM JOBS ;